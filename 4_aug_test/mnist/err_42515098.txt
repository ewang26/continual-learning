/n/home12/thb489/new_continual_learning/continual-learning/myenv/lib/python3.10/site-packages/torch/utils/data/dataloader.py:557: UserWarning: This DataLoader will create 2 worker processes in total. Our suggested max number of worker in current system is 1, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:02<00:00,  2.95s/it]100%|██████████| 1/1 [00:02<00:00,  2.95s/it]
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:02<00:00,  2.47s/it]100%|██████████| 1/1 [00:02<00:00,  2.47s/it]
/n/home12/thb489/new_continual_learning/continual-learning/myenv/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/n/home12/thb489/new_continual_learning/continual-learning/myenv/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Traceback (most recent call last):
  File "/n/home12/thb489/new_continual_learning/continual-learning/run.py", line 180, in <module>
  File "/n/home12/thb489/new_continual_learning/continual-learning/run.py", line 176, in main
  File "/n/home12/thb489/new_continual_learning/continual-learning/run.py", line 135, in run
    results.update(exp_kwargs)
  File "/n/home12/thb489/new_continual_learning/continual-learning/mnist.py", line 209, in run_mnist
    test_data, 
  File "/n/home12/thb489/new_continual_learning/continual-learning/train_task.py", line 861, in CL_tasks
    early_stopper = {'valloader': valloaders[m], 'threshold': early_stopping_threshold}
  File "/n/home12/thb489/new_continual_learning/continual-learning/train_task.py", line 723, in compute_memory_sets
    (2) load pretrained models M1 and M2. Then use M1 to create memory sets for 
AssertionError
